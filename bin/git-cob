#! /bin/bash
set -x

if test -z "$1"; then
    echo 'Derp'
    exit 1
fi

INPUT_REF=$1
REMOTE_REF=$(git rev-parse --symbolic-full-name --remotes="*$INPUT_REF")

if git rev-parse --verify "$INPUT_REF" && test -n "$REMOTE_REF"; then
    # The input parameter was totally referring to a remote branch.

    # Strip the remote to get the branch name
    BRANCH_NAME=$(sed -r 's^refs/remotes/\w*/^^' <<<"$REMOTE_REF")

    # Let's checkout that branch with the same name locally.
    git checkout -b "$BRANCH_NAME" "$REMOTE_REF"
else
    # Since the input param didn't match any remote branch, the user must want to create a new
    # branch tracking origin/master by default
    git checkout -b "$INPUT_REF" origin/master
fi
